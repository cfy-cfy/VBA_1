https://www.runoob.com/git/git-remote-repo.html
————————————————————————————————————————————————————————————————————————————————
1、 下载安装 git （已安装可忽略）

 　  安装地址：https://git-scm.com/downloads

2、进入你要上传的文件夹，空白处点击鼠标右键，选择 Git Bash Here

3、进入终端后输入以下命令

命令：

　　① 初始化 ：git init （可以看到生成了 .git 目录）

　　② 添加远程仓库：git remote add origin + 仓库地址  
            例如：git remote add origin https://github.com/cfy-cfy/VBA_1.git
            例如：git remote add origin git@github.com:cfy-cfy/VBA_1.git

　　③ 所有变化提交到暂存区：git add .  （点不能漏）

　　④ 提交到虚拟仓库：git commit -m ' 这里是注释 '

　　⑤ 最后的提交命令：git push -u origin master

*****************************************************************     
【生成 SSH Key】：

$ ssh-keygen -t rsa -C "1021931267@qq.com"

A 后面的 your_email@youremail.com 改为你在 Github 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。
成功的话会在 ~/ 下生成 .ssh 文件夹，进去，打开 id_rsa.pub，复制里面的 key。
B 回到 github 上，进入 Account => Settings（账户配置）
C 左边选择 SSH and GPG keys，然后点击 New SSH key 按钮,title 设置标题，可以随便填，粘贴在你电脑上生成的 key。

*****************************************************************     
【为了验证是否成功，输入以下命令：】

$ ssh -T git@github.com

*****************************************************************  
【配置】 git 的设置使用 git config 命令。

显示当前的 git 配置信息： $ git config --list

*****************************************************************
  
【设置提交代码时的用户信息】 如果去掉 --global 参数只对当前仓库有效。

开始前我们需要先设置提交的用户信息，包括用户名和邮箱：

$ git config --global user.name 'cfy-cfy'        
$ git config --global user.email 1021931267@qq.com

*****************************************************************
【以下实例我们添加两个文件】

$ touch README                # 创建文件
$ touch hello.php             # 创建文件

$ ls
README        hello.php

$ cat README.md   # 查看 README.md 文件内容：

$ git status
$ git status -s  # 用于查看在你上次提交之后是否有对文件进行再次修改，使用 -s 参数来获得简短的输出结果；
?? README
?? hello.php

$ git add README hello.php 

$ git status -s
A  README
A  hello.php

$ git commit -m '第一次版本提交'            # -m 可以是一些备注信息
$ git commit -am '修改 hello.php 文件'     # -a 参数设置修改文件后不需要执行 git add 命令，直接来提交;
$ git commit [file1] [file2] ... -m [message]   # 提交暂存区的指定文件到仓库区：

$ git remote add origin git@github.com:tianqixin/runoob-git-test.git
$ git push -u origin master

$ git remote rm name  # 删除远程仓库
$ git remote rename old_name new_name  # 修改仓库名
$ git remote     # 查看当前的远程库
$ git remote -v  # 执行时加上 -v 参数，你还可以看到每个别名的实际链接地址。

$ git mv -f [file] [newfile] # 如果新但文件名已经存在，但还是要重命名它，可以使用 -f 参数；
$ git mv README  README.md   # 命令用于移动或重命名一个文件、目录或软连接。

$ git rm runoob.txt     # 从暂存区和工作区中删除 runoob.txt 文件；
$ git rm -f runoob.txt  # 如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f；强行从暂存区和工作区中删除修改后的 runoob.txt 文件；
$ git rm --cached runoob.txt # 把文件从暂存区域移除，但仍保留在当前工作目录中；

$ git clone https://github.com/tianqixin/runoob-git-test   # 拷贝完成后，在当前目录下会生成一个 runoob-git-test 目录；
$ git clone https://github.com/tianqixin/runoob-git-test another-runoob-name  # 拷贝远程 git 项目，本地项目名为 another-runoob-name；

